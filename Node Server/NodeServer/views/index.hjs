<!DOCTYPE html>
<html>
<head class="no-js" lang="en">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Prac 9 | Hangman</title>
    <link rel="stylesheet" href="css/foundation.css" />
    <script src="js/vendor/modernizr.js"></script>

    <script id="texture-shader-fs" type="x-shader/x-fragment">
    precision mediump float;

    varying vec2 vTextureCoord;
    varying vec3 vTransformedNormal;
    varying vec4 vPosition;

    uniform vec3 uAmbientColor;
    uniform vec3 uPointLightingLocation;
    uniform vec3 uPointLightingColor;
    uniform sampler2D uSampler;
    uniform float uAlpha;


    void main(void) {

        vec3 lightWeighting;

        vec3 lightDirection = normalize(uPointLightingLocation - vPosition.xyz);

        float directionalLightWeighting = max(dot(normalize(vTransformedNormal), lightDirection), 0.0);
        lightWeighting = uAmbientColor + uPointLightingColor * directionalLightWeighting;


        vec4 fragmentColor;

        fragmentColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));

        gl_FragColor = vec4(fragmentColor.rgb * lightWeighting, fragmentColor.a * uAlpha);

    }
</script>

    <script id="texture-shader-vs" type="x-shader/x-vertex">

        attribute vec3 aVertexPosition;
    attribute vec3 aVertexNormal;
    attribute vec2 aTextureCoord;

    uniform mat4 uMVMatrix;
    uniform mat4 uPMatrix;
    uniform mat3 uNMatrix;


    varying vec2 vTextureCoord;
    varying vec3 vTransformedNormal;
    varying vec4 vPosition;

    void main(void) {
        vPosition = uMVMatrix * vec4(aVertexPosition, 1.0);
        gl_Position = uPMatrix * vPosition;
        vTextureCoord = aTextureCoord;
        vTransformedNormal = uNMatrix * aVertexNormal;
    }
</script>

    <script type="application/javascript" src="shaders.js"></script>
    <script type="application/javascript" src="objects.js"></script>
    <script type="application/javascript" src="webgl-utils.js"></script>
    <script type="application/javascript" src="glMatrix-0.9.5.min.js"></script>
    <script type="application/javascript" src="utilities.js"></script>
    <script type="application/javascript" src="matrixManipulation.js"></script>
    <script type="application/javascript" src="textures.js"></script>
    <script type="application/javascript" src="gl.js"></script>
    <script type="text/javascript" src="java_socket_bridge.js"></script>

    <script type="text/javascript">
        function resize_canvas(){
            canvas = document.getElementById("canvas");
            canvas.style.width ='100%';
            canvas.style.height='100%';
            canvas.width  = canvas.offsetWidth;
            canvas.height = canvas.offsetHeight;
        }
    </script>

    <style>
        body{
            background-color: black;
            color: white;
        }
    </style>

    <script>
        function run(){
          connected = false;
            if(!connected){
                connected = socket_connect(window.prompt("Enter IP address:","192.168.0.7"),
                        window.prompt("Enter Port:","8190"));
            }
            do {
                if (connected) {
                    socket_send("MAIL "+window.prompt("Enter Email:","werner.mostert1@gmail.com"));
                }
                else {
                    connected = socket_connect(window.prompt("Enter IP address:",""),
                            window.prompt("Enter Port:",""));
                }
            }while(!connected);
        }

        function reset(){
            socket_send("RESET");
            parts  = 0;
            document.getElementById("inputField").style.disabled = true;
        }

        function on_socket_get(message){
            var area = document.getElementById("outputArea");
            if(message.length > 5 && message.substring(0,3) == "MSG"){
                var msgNo = message[4];

            }
            if(message == "RESULT false"){
                parts++;
                if(parts > 5){
                    document.getElementById("inputField").style.disabled = true;
                    area.innerHTML = "<div data-alert class='alert-box error radius'>You lost! Better luck next time buddy.</div>" + area.innerHTML;
                }
            }else if(message == "RESULT true"){
                document.getElementById("inputField").style.disabled = false;
                area.innerHTML = "<div data-alert class='alert-box success radius'>Congratulations! You won!</div>" + area.innerHTML;
            }
            else
            {
                area.innerHTML = "<div class='panel callout radius'>" + message + "</div>" + area.innerHTML;
            }

        }

        function kill(){
            socket_send("BYE");
            socket_disconnect();
        }

        function send(){
           var s = document.getElementById("inputField").value;
            socket_send("TRY "+s);
            document.getElementById("inputField").value = "";
        }
    </script>

</head>


<body onload="resize_canvas();webGLStart();" onresize="resize_canvas();" onbeforeunload="kill()">

<applet id="JavaSocketBridge"
        archive="JavaSocketBridge.jar"
        code="JavaSocketBridge.class"
        width="0"
        height="0">
</applet>


<div clas="row">
    <div id = "canvas_container" class="large-6 columns">
        <canvas id="canvas" height="500px" width = "2000px">WebGL is not supported</canvas>
        <div class="row">
            <div class="large-6 columns">
                <input id="inputField" type="text" size="1" placeholder="a"/>
                <div id="0"></div>
                <div id="1"></div>
                <div id="2"></div>
                <div id="3"></div>
                <div id="4"></div>
            </div>
            <div class="large-6 columns">
                <a href="#" class="button radius" onclick="send()">Go</a>
                <a href="#" class="button radius" onclick="reset()">Reset</a>
            </div>
        </div>
    </div>
    <div id="outputArea" class="large-6 columns">
    </div>
</div>





<script src="js/vendor/jquery.js"></script>
<script src="js/foundation.min.js"></script>
<script>
    var parts = 0;

    $(document).foundation();
    $(document).ready(function(){
        run();
    });
</script>
</body>
</html>